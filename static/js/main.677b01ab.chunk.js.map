{"version":3,"sources":["components/Converter.js","App.js","index.js"],"names":["Converter","props","state","currencyA_value","currencyB_value","converter","bind","fromTo","this","currencyA","currencyB","url","fetch","then","res","json","cotation","val","parseFloat","toFixed","setState","className","type","onChange","event","target","value","onClick","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAIqBA,G,wDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAEDC,MAAQ,CACTC,gBAAiB,GACjBC,gBAAiB,GAGrB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBARH,E,wDAWN,IAAD,OACHC,EAAM,UAAMC,KAAKP,MAAMQ,UAAjB,YAA8BD,KAAKP,MAAMS,WAC/CC,EAAG,gFAA4EJ,EAA5E,cAEPK,MAAMD,GACLE,MAAK,SAAAC,GAEF,OAAOA,EAAIC,UAGdF,MAAK,SAAAE,GACF,IAAIC,EAAWD,EAAKR,GAAQU,IACxBb,GAAmBc,WAAW,EAAKhB,MAAMC,iBAAmBa,GAAUG,QAAQ,GAClF,EAAKC,SAAS,CAAChB,yB,+BAId,IAAD,OACJ,OACI,yBAAKiB,UAAU,aACX,4BAAKb,KAAKP,MAAMQ,UAAhB,SAAiCD,KAAKP,MAAMS,WAC5C,2BAAOY,KAAK,OAAOC,SAAU,SAACC,GAAW,EAAKJ,SAAS,CAACjB,gBAAgBqB,EAAMC,OAAOC,WACrF,2BAAOJ,KAAK,SAASI,MAAM,YAAYC,QAAUnB,KAAKH,YACtD,4BAAKG,KAAKN,MAAME,sB,GAnCOwB,cCuBxBC,E,uKApBP,OACI,yBAAKR,UAAU,OACX,mDACA,yBAAKA,UAAU,OACX,kBAAC,EAAD,CAAWZ,UAAU,MAAMC,UAAU,QACrC,kBAAC,EAAD,CAAWD,UAAU,MAAMC,UAAU,SAEzC,yBAAKW,UAAU,OACX,kBAAC,EAAD,CAAWZ,UAAU,MAAMC,UAAU,QACrC,kBAAC,EAAD,CAAWD,UAAU,MAAMC,UAAU,SAEzC,yBAAKW,UAAU,OACX,kBAAC,EAAD,CAAWZ,UAAU,MAAMC,UAAU,QACrC,kBAAC,EAAD,CAAWD,UAAU,MAAMC,UAAU,c,GAfvCkB,aCAlBE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.677b01ab.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Converter.css'\n\n\nexport default class Converter extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            currencyA_value: \"\",\n            currencyB_value: 0\n        }\n\n        this.converter = this.converter.bind(this);\n    }\n\n    converter(){\n        let fromTo = `${this.props.currencyA}_${this.props.currencyB}`;\n        let url = `https://free.currconv.com/api/v7/convert?apiKey=do-not-use-this-key&q=${fromTo}&compact=y`;\n\n        fetch(url)\n        .then(res=>{\n\n            return res.json()\n\n        })\n        .then(json=>{\n            let cotation = json[fromTo].val;\n            let currencyB_value = (parseFloat(this.state.currencyA_value) * cotation).toFixed(2);\n            this.setState({currencyB_value});\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"converter\">\n                <h2>{this.props.currencyA} para {this.props.currencyB}</h2>\n                <input type=\"text\" onChange={(event) => {this.setState({currencyA_value:event.target.value})}}></input>\n                <input type=\"button\" value=\"Converter\" onClick= {this.converter}></input>\n                <h2>{this.state.currencyB_value}</h2>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\n\nimport './App.css';\nimport Converter from './components/Converter'\n\nclass App extends Component {\n    render(){\n        return (\n            <div className=\"App\">\n                <h1>Conversor de moedas</h1>\n                <div className=\"row\">\n                    <Converter currencyA=\"USD\" currencyB=\"BRL\"></Converter>\n                    <Converter currencyA=\"BRL\" currencyB=\"USD\"></Converter>\n                </div>\n                <div className=\"row\">\n                    <Converter currencyA=\"CAD\" currencyB=\"BRL\"></Converter>\n                    <Converter currencyA=\"BRL\" currencyB=\"CAD\"></Converter>\n                </div>\n                <div className=\"row\">\n                    <Converter currencyA=\"EUR\" currencyB=\"BRL\"></Converter>\n                    <Converter currencyA=\"BRL\" currencyB=\"EUR\"></Converter>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}